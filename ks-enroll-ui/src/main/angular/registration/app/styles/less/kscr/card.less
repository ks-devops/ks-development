.kscr-Card,
.kscr-Card-Results {
  color: @cardTextColor;
  .font-size(14);
  font-family: @secondaryFontFamily;
  margin: 0 0.5rem;
  position: relative;
  a {text-decoration: none;}
}

// Primary text in a card title (e.g. course code & reg group)
.kscr-Card-title {
  color: @cardTextColor; //#666666;
  font-weight: bold;

  // Alert state, used in waitlist notification
  &-alert {
    font-weight: bold;
  }
}

// Primary text within a card (e.g. course title & description)
.kscr-Card-text {
  color: @primaryTextColor;
  margin-top: 0.3rem;

  // Alert state, used in waitlist notification
  &-alert {
      margin: 0.3rem 0 0;
  }
}


// Mixin for details text
.kscr-Card-detailsText-common() {
  border-top: @horizontalLineBorder;
  color: @primaryTextColor;
  .font-size(14);
  font-family: @secondaryFontFamily;
  font-weight: normal;
  padding: 1rem 0 0;
}

// Card details text (e.g. Cart item failure reason), typically shown with border and padding
.kscr-Card-detailsText {
    .kscr-Card-detailsText-common();

    &--action { // e.g. Add to Waitlist
        .kscr-Card-detailsText-common();
        border-color: @warningBorder;
        color: @warningText;
    }

    &--edit { // Expand || Edit Course Options
        .kscr-Card-detailsText-common();
    }

    &--error { // e.g. Time Conflict Warning
        .kscr-Card-detailsText-common();
        border-color: @errorBorder;
        color: @errorText;
    }

    &--show { // Collapsed accordion
        .kscr-Card-detailsText-common();
        border-bottom: none;
        border-top: none;
        padding-bottom: 0;
        padding-top: 0.3rem;
    }

    /* Transitions for fade effect in Card Edit */
    // Styles for hide being added
    &.ng-hide-add,
    &--edit.ng-hide-add {
        display: none;
        opacity: 0.75; // Starting opacity when element is being hidden

        &.ng-hide-add-active {
            opacity: 0; // Final opacity when element is being hidden
        }
    }

    // Styles for hide being removed
    &.ng-hide-remove,
    &--edit.ng-hide-remove {
        .util-transitions-browserHelper();
        display: block;
        opacity: 0; // Starting opacity when element is being shown

        &.ng-hide-remove-active {
            opacity: 0.75; // Final opacity when element is being shown
        }
    }
    /* END of Transitions for fade effect in Card Edit */
}


.kscr-Card-courseTimes {
  display: inline-flex;
  width: 100%;
}

.kscr-Card-scheduleComponent {
  width: 100%;
}

.kscr-Card-ao-type {
  float: left;
  width: 3.5rem;
}

.kscr-Card-ao-instructor {
  float: right;
  text-align: right;
}

.kscr-Card-ao-schedule {
  clear: both;
}

.kscr-Card-supportText {
  color: @cardTextColor;
  font-weight: normal;
  float: right;
}

.kscr-Card-remove {
  display: block;
  position: absolute;
  right: 1rem;
  top: 1rem;
}

.kscr-Card-statusRemove a {
  .dismiss-icon;
  float: right;
}

.kscr-Card-buttons {
  border-top: @horizontalLineBorder;
  margin-top: 1rem;
  padding: 1rem 0 0;
  text-align: right;

  .util-Alert--error & {
    border-color: @errorBorder;
  }
  .util-Alert--information & {
    border-color: @infoText;
  }
  .util-Alert--success & {
    border-color: @successBorder;
  }
  .util-Alert--warning & {
    border-color: @warningBorder;
  }
}

.kscr-Card-button {
    display: inline;
    margin-left: 0.5rem;
}

.kscr-Card-icon {
    color:  @secondaryTextColor;
    left: 0.5rem;
    position: absolute;
    .font-size(12);
    top: 0.5rem;
}


// Container for a single course in a course card
.kscr-Course-container {
  position: relative;
  width: 100%;
  .util-transitions-browserHelper();
  opacity: 1;

  // Transitions when items are being added within ngRepeat
  &.ng-leave {
    opacity: 0.5;
  }
  &.ng-leave-active {
    opacity: 0;
  }
}

// Card result reason text
.kscr-Card-reason {
    display: flex;

    // Reason label (e.g. Reason)
    &-label {}

    // List of messages
    &-messages {
        flex: 1;
        padding-left: 0.5rem;
    }

    // Single message
    &-message {
        // Space them out 5px between each element
        margin-bottom: 0.5rem;
        &:last-child {
            margin-bottom: 0;
        }
    }
}

.kscr-Card-alert-spacing {
  padding-right: 2rem;
}


// Card badge, (e.g. Grading option indicator)
.kscr-Card-badge {
    .Rounded(5px);
    background-color: @badgeColor;
    color: @badgeTextColor;
    .font-size(11);
    font-weight: bold;
    padding: 0 0.4rem;

    // Edited highlighting
    &--edited {
        color: @textColor--highlight; //#ffff7f;
        .util-Text-highlighter(@distance, @angle, @blur, @spread, @shadowColor);

        &-add { // Styles for when the editing class is added (added with -add suffix by ngAnimate)
            .util-transitions-browserHelper(0.2s);
        }
        &-remove { // Styles for when the editing class is removed (added with -remove suffix by ngAnimate)
            .util-transitions-browserHelper(2s);
        }
    }

    // Container fading styles (Separated out from badge so highlighting can have different transitions than fade)
    &-wrap {
        opacity: 1; // Starting opacity
        &.ng-hide {
            opacity: 0; // Ending opacity

            &-add, &-add-active { // Fade out
                display: inline !important; // Important to override the display: block !important; in .ng-hide
                .util-transitions-browserHelper(2s);
            }
            &-remove, &-remove-active { // Fade in
                .util-transitions-browserHelper(0.2s);
            }
        }
    }
}

// Card credits
.kscr-Card-credits {
    &--edited {
        background-color: @backgroundColor--highlight;
        .util-Text-highlighter(@distance, @angle, @blur, @spread, @shadowColor);

        &-add { // Styles for when the editing class is added (added with -add suffix by ngAnimate)
            .util-transitions-browserHelper(0.2s);
        }
        &-remove { // Styles for when the editing class is removed (added with -remove suffix by ngAnimate)
            .util-transitions-browserHelper(2s);
        }
    }
}


/**** Override of accordion panel for card section ****/

.panel-default {
  background-color: @cardBackgroundColor;
  border-color: @cardBorderColor;
}

.panel-default > .panel-heading {
  background-color: @cardBackgroundColor;
  border-color: @cardBorderColor;
  color: @cardTextColor;
  cursor: pointer;
  cursor: hand;
  padding: 0;
}

.panel {
  background-color: @cardBackgroundColor;
}

.panel-group .panel-heading + .panel-collapse .panel-body {
  border-top: none;
}

.panel-body {
    padding: 0 1rem 1rem 2.5rem;
}

.panel-title {
  .font-size(14);
  font-family: @secondaryFontFamily;
}

.panel-group  .panel {
  margin-bottom: 1rem;
  border-width: 1px 1px 2px 1px;
  .util-transitions-browserHelper();
  opacity: 1;
}

.panel-group  .panel.ng-leave {
  display: block!important;
}

.panel-group  .panel.ng-leave-active {
  line-height: 0;
  opacity: 0;
}
/**** END of Override of accordion panel for card section ****/




/* Override of accordion panel for card section to animate */
.kscr-Card-accordion-heading {
    padding: 0.5rem 0.5rem 1rem 2.5rem;
    position: relative;
    .util-transitions-browserHelper(2s);

    &-fadeIn {
        background-color: @backgroundColor--highlight;
        .util-transitions-browserHelper(0.2s);
        .util-Text-highlighter--inset(@distance, @angle, @blur, @spread, @shadowColor);
    }
}


@media screen and (min-width: @largeFormatMin) {
  .kscr-Card {
    margin: 0.4rem 0 0;
    border: none;
  }

  .kscr-Responsive-cart .kscr-Card {
    margin-top: 0;
  }

  .kscr-Card-Cart {
      margin-bottom: 0.1rem;
  }

  .kscr-Responsive-cart .kscr-Card-courseTimes {
    display: none;
  }

  .kscr-Responsive-cart .panel-group .panel {
    margin: 0;
    border: none;
    .Rounded(0);
  }

  .kscr-Responsive-cart .kscr-Card-detailsText--show {
    padding: 0;
  }

  .kscr-Responsive-schedule .panel-group .panel {
    margin: 0 1rem 1rem;
  }

    .kscr-Card-heading {
        margin: 0 1rem; // Main heading in Schedule & Waitlist
        .panel-heading & {
            margin: 0; // Course card panel heading
        }
    }

    // Cart results card
    .kscr-Card-Results {
        background-color: @whiteBackground;
        padding-left: 1rem;
        padding-right: 1rem;

        .kscr-Card-detailsText .kscr-Card-text-alert,
        .kscr-cartResult-status--waitlist .kscr-Card-text-alert {
            display: block; // But... show them in the Add to Waitlist success
        }
    }
}