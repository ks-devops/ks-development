"use strict";angular.module("regCartApp",["configuration","ngAnimate","ngCookies","ngResource","ngSanitize","ngTouch","ui.router","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(a,b,c){b.otherwise("/myCart");var d={templateUrl:"partials/cart.html",controller:"CartCtrl"},e={templateUrl:"partials/schedule.html",controller:"ScheduleCtrl"};a.state("root",{"abstract":!0,views:{root:{templateUrl:"partials/main.html",controller:"MainCtrl"}}}).state("root.schedule",{url:"/mySchedule",views:{"":e,mycart:d,schedule:e}}).state("root.cart",{url:"/myCart",views:{"":e,mycart:d,schedule:e}}).state("root.search",{url:"/search",views:{"":{templateUrl:"partials/search.html"},mycart:d,schedule:e}}).state("root.search.results",{url:"/{searchCriteria}",views:{"":{templateUrl:"partials/searchResults.html",controller:"SearchCtrl"}}}).state("root.search.details",{url:"/{searchCriteria}/{id}",templateUrl:"partials/searchDetails.html",controller:"SearchDetailsCtrl"}),c.interceptors.push("loginInterceptor")}]),angular.module("configuration",[]).value("APP_URL","ks-with-rice-bundled-dev/services/").value("DEFAULT_TERM","kuali.atp.2012Fall"),angular.module("regCartApp").constant("URLS",{scheduleOfClasses:"ScheduleOfClassesClientService",courseRegistration:"CourseRegistrationClientService",courseRegistrationCart:"CourseRegistrationCartClientService",developmentLogin:"DevelopmentLoginClientService"}).constant("STATE",function(){var a={failed:"kuali.lpr.trans.state.failed",processing:"kuali.lpr.trans.state.processing",succeeded:"kuali.lpr.trans.state.succeeded",item:{failed:"kuali.lpr.trans.item.state.failed",processing:"kuali.lpr.trans.item.state.processing",succeeded:"kuali.lpr.trans.item.state.succeeded",waitlist:"kuali.lpr.trans.item.state.waitlist",waitlistActionAvailable:"kuali.lpr.trans.item.state.waitlistActionAvailable"}};return{lpr:a,action:[a.item.waitlistActionAvailable],error:[a.failed,a.item.failed],processing:[a.processing,a.item.processing],success:[a.succeeded,a.item.succeeded],waitlist:[a.item.waitlist]}}()).constant("STATUS",{action:"action",editing:"editing",error:"error","new":"new",processing:"processing",success:"success",waitlist:"waitlist"}).constant("GRADING_OPTION",{audit:"kuali.resultComponent.grade.audit",letter:"kuali.resultComponent.grade.letter",passFail:"kuali.resultComponent.grade.passFail"}).constant("ACTION_LINK",{removeItemFromCart:"removeItemFromCart",undoDeleteCourse:"undoDeleteCourse"}).constant("VALIDATION_ERROR_TYPE",{maxCredits:"kuali.lpr.trans.message.credit.load.exceeded",timeConflict:"kuali.lpr.trans.message.time.conflict",waitlistAvailable:"kuali.lpr.trans.message.waitlist.available",waitlistWaitlisted:"kuali.lpr.trans.message.waitlist.waitlisted",waitlistFull:"kuali.lpr.trans.message.waitlist.full",waitlistNotOffered:"kuali.lpr.trans.message.waitlist.not.offered",transactionException:"kuali.lpr.trans.message.exception",transactionItemException:"kuali.lpr.trans.item.message.exception"}).constant("VALIDATION_SUCCESS_TYPE",{waitlistStudentRemoved:"kuali.lpr.trans.message.waitlist.student.removed",waitlistUpdated:"kuali.lpr.trans.message.waitlist.options.updated",courseUpdated:"kuali.lpr.trans.message.course.updated",courseDropped:"kuali.lpr.trans.message.course.dropped",personRegistered:"kuali.lpr.trans.message.person.registered"}).constant("DAY_CONSTANTS",{monday:"M",tuesday:"Tu",wednesday:"W",thursday:"Th",friday:"F",saturday:"Sa",sunday:"Su",dayArray:["M","Tu","W","Th","F","Sa","Su"]}),angular.module("regCartApp").constant("SEARCH_FACETS",[{label:"Seats",id:"seatsAvailable",optionsProvider:function(a){var b=0;angular.forEach(a,function(a){a.seatsAvailable>0&&b++});var c=[];return b>0&&c.push({label:"Seats available",value:"seatsAvailable",count:b}),c},filter:function(a){return a.seatsAvailable>0}},{label:"Credits",id:"creditOptions",optionsKey:"creditOptions"},{label:"Course Level",id:"courseLevel",optionsKey:"courseLevel",prepare:function(a){angular.forEach(a,function(a){if(angular.isUndefined(a.courseLevel)){var b=a.courseNumber.substring(0,1)+"00";a.courseLevel=b}})}},{label:"Course Prefix",id:"coursePrefix",optionsKey:"coursePrefix"}]),angular.module("regCartApp").controller("MainCtrl",["$scope","$location","$state","TermsService","ScheduleService","GlobalVarsService","APP_URL","DEFAULT_TERM","LoginService","MessageService","$modal",function(a,b,c,d,e,f,g,h,i,j,k){console.log("In Main Controller"),a.appUrl=g.replace("/services/","/"),a.termId=null,a.termName="",a.studentIsEligibleForTerm=!0,a.$watch("termId",function(b,c){b!==c&&(a.termName=d.getTermNameForTermId(a.terms,b),b===h?(console.log("checking term eligibility"),d.checkStudentEligibilityForTerm().query({termId:b},function(d){a.studentIsEligibleForTerm=angular.isDefined(d.isEligible)&&d.isEligible||!1,a.studentIsEligibleForTerm?a.$broadcast("termIdChanged",b,c):(f.setUserId(d.userId),a.userId=f.getUserId)},function(b){console.log("Error while checking if term is open for registration",b),a.studentIsEligibleForTerm=!1})):(console.log("term eligibility check bypassed - term != default term"),a.studentIsEligibleForTerm=!0,a.$broadcast("termIdChanged",b,c)))}),a.$on("termIdChanged",function(b,c){e.getSchedule(c).then(function(b){console.log("called rest service to get schedule data - in main.js"),f.updateScheduleCounts(b),a.cartCredits=f.getCartCredits,a.cartCourseCount=f.getCartCourseCount,a.registeredCredits=f.getRegisteredCredits,a.registeredCourseCount=f.getRegisteredCourseCount,a.waitlistedCredits=f.getWaitlistedCredits,a.waitlistedCourseCount=f.getWaitlistedCourseCount,a.showWaitlistedSection=f.getShowWaitlistedSection,a.userId=f.getUserId})}),d.getTerms().then(function(b){a.terms=b,a.termId=h,a.termName=d.getTermNameForTermId(b,a.termId)}),j.getMessages().then(function(b){a.messages=b}),a.logout=function(){i.logout().query({},function(){console.log("Logging out"),location.reload()})},a.goToPage=function(a){console.log("Navigating to page: "+a),b.url(a)},a.$on("sessionExpired",function(){console.log("Received event sessionExpired"),k.open({backdrop:"static",templateUrl:"partials/sessionExpired.html",controller:"SessionCtrl"})}),a.$parent.uiState=c.current.name,a.$on("$stateChangeStart",function(b,c){a.$parent.uiState=c.name})}]).controller("SessionCtrl",["$scope","LoginService",function(a,b){a.logout=function(){b.logout().query({},function(){console.log("Session expired...logging out"),location.reload()})}}]),angular.module("regCartApp").controller("CartCtrl",["$scope","$modal","$timeout","STATE","STATUS","GRADING_OPTION","ACTION_LINK","CartService","ScheduleService","GlobalVarsService",function(a,b,c,d,e,f,g,h,i,j){function k(b){h.getCart(b).then(function(b){a.cart=b;for(var c,f=[],g=!1,h=0;h<a.cart.items.length;h++){var i=a.cart.items[h];if(j.getCorrespondingStatusFromState(i.state)===e.processing){i.status=e.processing;var k=angular.copy(i);a.cartResults.items.push(k),a.cartResults.state=d.lpr.processing,a.cartResults.status=e.processing,g=!0,c=i.cartId}else f.push(i)}a.cart.items=f,g&&o(c)})}function l(d,g,i,j,k,l,m){a.courseAdded=!1,h.addCourseToCart().query({cartId:d,courseCode:g,termId:i,regGroupCode:j,regGroupId:k,gradingOptionId:l,credits:m},function(b){console.log("Searched for course: "+a.courseCode+", Term: "+a.termId),a.courseCode="",a.regCode="",a.cart.items.unshift(b),console.log("Started to glow..."),b.addingNewCartItem=!0,c(function(){b.addingNewCartItem=!1},2e3),a.courseAdded=!0},function(c){console.log("CartId:",d),404===c.status?(a.userMessage={txt:c.data,type:e.error,course:g},a.courseAdded=!0):400===c.status?(console.log("CartId: ",d),b.open({backdrop:"static",templateUrl:"partials/additionalOptions.html",resolve:{item:function(){return c.data},cartId:function(){return d}},controller:["$rootScope","$scope","item","cartId",function(a,b,c,d){console.log("Controller for modal... Item: ",c),b.newCartItem=c,b.newCartItem.credits=b.newCartItem.newCredits=b.newCartItem.creditOptions[0],b.newCartItem.grading=b.newCartItem.newGrading=f.letter,b.newCartItem.editing=!0,b.dismissAdditionalOptions=function(){console.log("Dismissing credits and grading"),b.$close(!0)},b.saveAdditionalOptions=function(c){c.editing=!1,console.log("Save credits and grading for cartId:",d),a.$broadcast("addCourseToCart",d,b.newCartItem.courseCode,b.newCartItem.termId,b.newCartItem.regGroupCode,b.newCartItem.regGroupId,b.newCartItem.newGrading,b.newCartItem.newCredits),b.$close(!0)}}]}),a.courseAdded=!0):(console.log("Error with adding course",c.data.consoleMessage),a.userMessage={txt:c.data.genericMessage,type:c.data.type,detail:c.data.detailedMessage,course:g+" ("+j+")"},a.courseAdded=!0)})}function m(){var b=0,c=0,d=0,f=0;angular.forEach(a.cartResults.items,function(a){switch(a.status){case e.success:b++;break;case e.waitlist:b++,d++;break;case e.action:c++;break;case e.error:f++}}),a.cartResults.successCount=b,a.cartResults.waitlistCount=c,a.cartResults.waitlistedCount=d,a.cartResults.errorCount=f}function n(){if(!a.cart)return 0;for(var b=0,c=0;c<a.cart.items.length;c++)b+=Number(a.cart.items[c].credits);return b}a.states=d,a.statuses=e,a.oneAtATime=!1,a.isCollapsed=!0,a.cartResults={items:[]},a.$on("termIdChanged",function(b,c){console.log("term id has changed - cart: "+c),a.cartResults.items.splice(0,a.cartResults.items.length),a.userMessage&&a.userMessage.txt&&a.removeUserMessage(),k(c)}),a.$watchCollection("cart.items",function(b){a.creditTotal=n(),b&&j.setCartCredits(a.creditTotal),j.setCartCourses(b)}),a.termId&&k(a.termId),a.getStatusMessageFromStatus=function(a){var b="";return a===e.success?b=" - Success!":(a===e.error||a===e.action)&&(b=" - Failed"),b},a.addRegGroupToCart=function(){a.courseCode=a.courseCode.toUpperCase(),l(a.cart.cartId,a.courseCode,a.termId,a.regCode,null,null,null)},a.addCartItemToCart=function(b){l(a.cart.cartId,null,a.termId,null,b.regGroupId,b.grading,b.credits)},a.$on("addCourseToCart",function(a,b,c,d,e,f,g,h){console.log("Received event addCourseToCart ",a),l(b,c,d,e,f,g,h)}),a.cancelNewCartItem=function(){a.newCartItem=null,a.showNew=!1},a.$on("deleteCartItem",function(b,c){var d=a.cart.items[c],f=d.actionLinks,i=null;angular.forEach(f,function(a){a.action===g.removeItemFromCart&&(i=a.uri)}),h.removeItemFromCart(i).query({},function(b){a.cart.items.splice(a.cart.items.indexOf(d),1);var c=null;angular.forEach(b.actionLinks,function(a){a.action===g.undoDeleteCourse&&(c=a.uri)}),a.userMessage={txt:"Removed <b>"+d.courseCode+"("+d.regGroupCode+")</b>",actionLink:c,linkText:"Undo",type:e.success},a.userActionSuccessful=!0})}),a.invokeActionLink=function(b){a.userActionSuccessful=!1,h.invokeActionLink(b).query({},function(b){a.cart.items.unshift(b),a.userMessage={txt:""}})},a.addCartItemToWaitlist=function(a){console.log("Adding cart item to waitlist... "),i.registerForRegistrationGroup().query({courseCode:a.courseCode,regGroupId:a.regGroupId,gradingOption:a.grading,credits:a.credits,allowWaitlist:!0},function(b){a.state=d.lpr.item.processing,a.status=e.processing,a.cartItemId=b.registrationRequestItems[0].id,c(function(){},250),console.log("Just waited 250, now start the polling"),o(b.id)})},a.removeAlertMessage=function(a){a.alertMessage=null},a.removeUserMessage=function(){a.userMessage.txt=null,a.userMessage.linkText=null},a.register=function(){h.submitCart().query({cartId:a.cart.cartId},function(b){a.userMessage={txt:""},console.log("Submitted cart. RegReqId["+b.id+"]"),a.cartResults=angular.copy(a.cart),a.cart.items.splice(0,a.cart.items.length),a.showConfirmation=!1,a.cartResults.state=d.lpr.processing,a.cartResults.status=e.processing,a.creditTotal=0,angular.forEach(a.cartResults.items,function(a){a.state=d.lpr.item.processing,a.status=e.processing}),c(function(){},250),console.log("Just waited 250, now start the polling"),o(b.id)})};var o=function(b){a.pollingCart=!1,c(function(){i.getRegistrationStatus().query({regReqId:b},function(c){a.cart.state=c.state,angular.forEach(c.responseItemResults,function(b){angular.forEach(a.cartResults.items,function(c){c.cartItemId===b.registrationRequestItemId&&(c.state=b.state,c.type=b.type,c.status=j.getCorrespondingStatusFromState(b.state),c.statusMessages=b.messages),c.status===e.processing&&(a.pollingCart=!0)})}),a.pollingCart?(console.log("Continue polling"),o(b)):(console.log("Stop polling"),a.cart.status="",a.cartResults.state=d.lpr.item.succeeded,a.cartResults.successCount=0,a.cartResults.waitlistCount=0,a.cartResults.waitlistedCount=0,a.cartResults.errorCount=0,m(),angular.forEach(a.cartResults.items,function(a){switch(a.status){case e.waitlist:case e.action:a.waitlistMessage=j.getCorrespondingMessageFromStatus(a.status)}}),i.getSchedule(a.termId,!0).then(function(b){console.log("called rest service to get schedule data - in cart.js"),j.updateScheduleCounts(b),a.registeredCredits=j.getRegisteredCredits,a.registeredCourseCount=j.getRegisteredCourseCount}))})},1e3)};a.removeCartResultItem=function(b){a.cartResults.items.splice(b,1),m()}}]),angular.module("regCartApp").controller("ScheduleCtrl",["$scope","$modal","$timeout","STATUS","GRADING_OPTION","ScheduleService","GlobalVarsService",function(a,b,c,d,e,f,g){a.getSchedules=g.getSchedule,a.registeredCredits=g.getRegisteredCredits,a.registeredCourseCount=g.getRegisteredCourseCount,a.waitlistedCredits=g.getWaitlistedCredits,a.waitlistedCourseCount=g.getWaitlistedCourseCount,a.numberOfDroppedWailistedCourses=0,a.numberOfDroppedCourses=0,a.userId=g.getUserId,a.showWaitlist=function(){var b=!1;return(a.waitlistedCredits()>0||a.showWaitlistMessages)&&(b=!0),b},a.showSchedule=function(){var b=!1;return(a.showWaitlist()||a.registeredCredits()>0||a.showRegisteredMessages)&&(b=!0),b},a.showGrid=function(){var a=!1;return angular.forEach(g.getCartCourses(),function(b){angular.forEach(b.schedule,function(b){for(var c=b.activityOfferingLocationTime,d=0;d<c.length;d++)if(!c[d].isTBA){a=!0;break}})}),a||angular.forEach(g.getScheduledCourses(),function(b){angular.forEach(b.activityOfferings,function(b){for(var c=b.scheduleComponents,d=0;d<c.length;d++)c[d].isTBA||(a=!0)})}),a},a.$on("removeWaitlistStatusMessage",function(b,c){c.statusMessage=null,a.numberOfDroppedWailistedCourses=a.numberOfDroppedWailistedCourses-1,0===a.numberOfDroppedWailistedCourses&&(a.showWaitlistMessages=!1)}),a.$on("removeRegisteredStatusMessage",function(b,c){c.statusMessage=null,a.numberOfDroppedCourses=a.numberOfDroppedCourses-1,0===a.numberOfDroppedCourses&&(a.showRegisteredMessages=!1)}),a.$on("dropRegistered",function(b,c,e){console.log("Open drop confirmation for registered course"),f.dropRegistrationGroup().query({masterLprId:e.masterLprId},function(b){a.numberOfDroppedCourses=a.numberOfDroppedCourses+1,a.showRegisteredMessages=!0,e.dropping=!1,e.dropProcessing=!0,h(b.id,e)},function(b){a.userMessage={txt:b.data,type:d.error}})}),a.$on("dropWaitlist",function(b,c,e){console.log("Open drop confirmation for waitlist course"),f.dropFromWaitlist().query({masterLprId:e.masterLprId},function(b){a.numberOfDroppedWailistedCourses=a.numberOfDroppedWailistedCourses+1,a.showWaitlistMessages=!0,e.dropping=!1,e.dropProcessing=!0,h(b.id,e)},function(a){e.statusMessage={txt:a.data,type:d.error}})});var h=function(b,e){console.log("start polling for course to be dropped from schedule"),e.statusMessage={txt:"<strong>"+e.courseCode+" ("+e.regGroupCode+")</strong> drop processing",type:d.processing},c(function(){f.getRegistrationStatus().query({regReqId:b},function(c){var f,i=g.getCorrespondingStatusFromState(c.state);switch(i){case d.new:case d.processing:console.log("continue polling"),h(b,e);break;case d.success:console.log("stop polling - success"),e.dropped=!0,e.dropProcessing=!1,a.$broadcast("courseDropped",e),e.waitlisted?(g.removeWaitlistedCourse(e),f="Removed from waitlist for <strong>"+e.courseCode+" ("+e.regGroupCode+")</strong> successfully"):(g.removeRegisteredCourse(e),f="<strong>"+e.courseCode+" ("+e.regGroupCode+")</strong> dropped successfully"),e.statusMessage={txt:f,type:d.success};break;case d.error:console.log("stop polling - error"),e.dropProcessing=!1,f=c.responseItemResults[0].messages[0],e.statusMessage={txt:f,type:d.error}}})},1e3)}}]),angular.module("regCartApp").controller("SearchCtrl",["$scope","SearchService","SEARCH_FACETS",function(a,b,c){function d(c){if(null!==c&&(null===a.searchCriteria||c!==a.searchCriteria)){if(angular.isFunction(e)&&(e(),e=null),!a.termId)return console.log("Search blocked - no termId exists"),void(e=a.$on("termIdChanged",function(){e(),e=null,d(c)}));console.log('Searching for "'+c+'"'),f=c,b.searchForCourses().query({termId:a.termId,criteria:c},function(b){f===c?(console.log('Search for "'+c+'" complete. Results: '+b.length),a.searchResults=b,a.searchCriteria=c):console.log('Search completed but not the most recent, ignoring results: "'+c+'" !== "'+f+'"')},function(a){console.log("Error searching for courses: ",a)})}}a.facets=c,a.searchCriteria=null,a.searchResults=[],a.searchColumns=[],a.$on("termIdChanged",function(){var b=a.searchCriteria;a.searchCriteria="",a.searchResults=[],b&&d(b)}),a.$on("$stateChangeSuccess",function(a,b,c){console.log(c),angular.isDefined(c.searchCriteria)&&d(c.searchCriteria)}),a.facetFilter=function(b){var c=!0;return angular.forEach(a.facets,function(a){c&&angular.isArray(a.selectedOptions)&&a.selectedOptions.length>0&&(a.filter(b,a.selectedOptions)||(c=!1))}),c};var e,f=""}]).filter("startFrom",function(){return function(a,b){return b=+b,a.slice(b)}}),angular.module("regCartApp").controller("SearchDetailsCtrl",["$scope","$state","SearchService",function(a,b,c){function d(b){null===b||null!==a.course&&null!==a.course.courseId&&b===a.course.courseId||(console.log('Loading course "'+b+'"'),f=b,c.getCourse().query({courseOfferingId:b},function(c){f===b?(angular.isDefined(c.activityOfferingTypes)&&angular.isArray(c.activityOfferingTypes)&&angular.forEach(c.activityOfferingTypes,function(a){angular.forEach(a.activityOfferings,function(b){b.activityOfferingType=a.activityOfferingType})}),a.course=c):console.log('Course load completed but not the most recent, ignoring: "'+b+'" !== "'+f+'"')},function(a){console.log("Error loading course: ",a)}))}function e(b){"object"==typeof b&&angular.isDefined(b.activityOfferingType)&&(b=b.activityOfferingType);var c=null;return angular.forEach(a.selectedAOs,function(a){null===c&&a.activityOfferingType===b&&(c=a)}),c}a.searchCriteria=null,a.course=null,a.$on("termIdChanged",function(c,d,e){null!==e&&a.searchCriteria&&"root.search.details"===a.uiState&&b.goToPage("root.search.results",{searchCriteria:a.searchCriteria})}),a.$on("$stateChangeSuccess",function(b,c,e){angular.isDefined(e.searchCriteria)&&(a.searchCriteria=e.searchCriteria),angular.isDefined(e.id)&&d(e.id)});var f=null;a.selectedAOs=[],a.selectedRegGroup=null,a.$watchCollection("selectedAOs",function(){}),a.clearSelectedAOs=function(){a.selectedAOs=[]},a.hasSelectedAOs=function(){return a.selectedAOs.length>0},a.isAOSelected=function(b){return-1!==a.selectedAOs.indexOf(b)},a.isAOTypeSelected=function(a){var b=e(a);return null!==b},a.toggleAO=function(b,c){if(a.isAOSelected(c))a.selectedAOs.splice(a.selectedAOs.indexOf(c),1);else{if(a.isAOTypeSelected(b)){var d=e(b);a.selectedAOs.splice(a.selectedAOs.indexOf(d),1)}a.selectedAOs.push(c)}},a.aoFilter=function(b,c){return c||a.isAOSelected(b)?!0:!a.isAOTypeSelected(b.activityOfferingType)}}]),angular.module("regCartApp").filter("creditRangeFormatter",function(){return function(a){var b="";if(a&&angular.isArray(a)){if(1===a.length)b=parseFloat(a[0]);else{var c=parseFloat(Math.min.apply(null,a)),d=parseFloat(Math.max.apply(null,a));b=c+"-"+d}b+=" cr"}return b}}),angular.module("regCartApp").filter("formatValidationMessage",["VALIDATION_ERROR_TYPE","MessageService",function(a,b){function c(a,b,c){var d=e(a.messageKey,c),f=[];if(a.courseCode&&f.push({masterLprId:a.masterLprId,courseCode:a.courseCode}),a.conflictingCourses&&angular.forEach(a.conflictingCourses,function(a){f.push(a)}),f.length){var g=null,h=[],i=[];b&&(angular.isDefined(b.cartItemId)?g=b.cartItemId:angular.isDefined(b.masterLprId)&&(g=b.masterLprId));for(var j=0;j<f.length;j++){if(f[j].masterLprId){if(f[j].masterLprId===g||i.indexOf(f[j].masterLprId)>=0)continue;i.push(f[j].masterLprId)}f[j].courseCode&&h.push("<strong>"+f[j].courseCode+"</strong>")}h.length&&(d+=" ("+h.join(", ")+")")}return d}function d(a,b){var c=e(a.messageKey,b);if(a.maxCredits){var d=parseFloat(a.maxCredits);c+=" (<strong>"+d+" credits</strong>)"}return c}function e(a,c){return b.getMessage(c,a)}return function(b,f,g){var h="";if(b)if("string"==typeof b)"string"==typeof f&&""!==b&&-1!==b.indexOf(f)&&(b=b.replace(f,"<strong>"+f+"</strong>")),h=b;else if(b.messageKey)switch(b.messageKey){case a.timeConflict:h=c(b,f,g);break;case a.maxCredits:h=d(b,g);break;default:h=e(b.messageKey,g)}return h}}]),angular.module("regCartApp").service("CartService",["$q","ServiceUtilities","URLS",function(a,b,c){var d={};this.getCart=function(b){var c=a.defer();return angular.isDefined(d[b])?c.resolve(d[b]):this.getCartFromServer().query({termId:b},function(a){d[b]=a,c.resolve(a)},function(a){c.reject(a)}),c.promise},this.getCartFromServer=function(){return b.getData(c.courseRegistrationCart+"/searchForCart")},this.addCourseToCart=function(){return b.postData(c.courseRegistrationCart+"/addCourseToCart")},this.removeItemFromCart=function(a){return b.deleteData(a)},this.invokeActionLink=function(a){return b.getData(a)},this.updateCartItem=function(){return b.putData(c.courseRegistrationCart+"/updateCartItem")},this.submitCart=function(){return b.getData(c.courseRegistrationCart+"/submitCart")},this.undoDeleteCourse=function(){return b.getData(c.courseRegistrationCart+"/undoDeleteCourse")}}]),angular.module("regCartApp").service("TermsService",["$q","ServiceUtilities","URLS","DEFAULT_TERM",function(a,b,c,d){var e=d;this.getTermId=function(){return e},this.setTermId=function(a){e=a},this.getTermNameForTermId=function(a,b){var c;return angular.forEach(a,function(a){a.termId===b&&(c=a.termName)}),c};var f=null;this.getTerms=function(){var b=a.defer();return null!==f?b.resolve(f):this.getTermsFromServer().query({termCode:null,active:!0},function(a){f=a,b.resolve(a)},function(a){b.reject(a)}),b.promise},this.checkStudentEligibilityForTerm=function(){return b.getData(c.scheduleOfClasses+"/checkStudentEligibilityForTerm")},this.getTermsFromServer=function(){return b.getArray(c.scheduleOfClasses+"/terms")}}]),angular.module("regCartApp").service("ScheduleService",["$q","ServiceUtilities","URLS",function(a,b,c){var d={};this.getSchedule=function(b,c){var e=a.defer();return c||(c=!1),angular.isDefined(d[b])&&!c?e.resolve(d[b]):this.getScheduleFromServer().query({termId:b},function(a){d[b]=a,e.resolve(a)},function(a){e.reject(a)}),e.promise},this.getScheduleFromServer=function(){return b.getData(c.courseRegistration+"/studentSchedule")},this.dropRegistrationGroup=function(){return b.deleteData(c.courseRegistration+"/registrationRequest")},this.registerForRegistrationGroup=function(){return b.postData(c.courseRegistration+"/registrationRequest")},this.updateScheduleItem=function(){return b.putData(c.courseRegistration+"/registrationRequest")},this.dropFromWaitlist=function(){return b.deleteData(c.courseRegistration+"/waitlistRegistrationRequest")},this.updateWaitlistItem=function(){return b.putData(c.courseRegistration+"/waitlistRegistrationRequest")},this.getRegistrationStatus=function(){return b.getData(c.courseRegistration+"/registrationStatus")}}]),angular.module("regCartApp").service("LoginService",["ServiceUtilities","URLS",function(a,b){this.logOnAsAdmin=function(){return a.getData(b.developmentLogin+"/login")},this.logout=function(){return a.getData(b.developmentLogin+"/logout")}}]),angular.module("regCartApp").service("MessageService",["$q","$resource",function(a,b){var c=null;this.getMessages=function(){var b=a.defer();return null!==c?b.resolve(c):this.loadMessages().query({},function(a){c=a,b.resolve(c)},function(a){b.reject(a)}),b.promise},this.getMessage=function(a,b){var c="";return angular.forEach(a,function(a){a.messageKey===b&&(c=a.message)}),c},this.loadMessages=function(){return b("json/messages.json",{},{query:{method:"GET",cache:!1,isArray:!0}})}}]),angular.module("regCartApp").service("SearchService",["ServiceUtilities","URLS","$resource",function(a,b){this.searchForCourses=function(){return a.getArray(b.scheduleOfClasses+"/search")},this.getCourse=function(){return a.getData(b.scheduleOfClasses+"/courseOfferingInfo")}}]),angular.module("regCartApp").factory("loginInterceptor",["$q","$injector","$window","$rootScope",function(a,b,c,d){return{response:function(b){var c=b.data;return"object"!=typeof c&&c.indexOf("Kuali Student Login")>-1?(console.log("Informing user that session has expired..."),d.$broadcast("sessionExpired"),a.reject(b)):b},responseError:function(d){if(0===d.status){console.log("Failed to execute request - trying to login");var e=b.get("LoginService");e.logOnAsAdmin().query({userId:"admin",password:"admin"},function(){console.log("Logged in, reloading page."),c.location.reload()},function(){console.log("Not Logged in, reloading page."),c.location.reload()})}return a.reject(d)}}}]),angular.module("regCartApp").service("GlobalVarsService",["STATE","STATUS",function(a,b){var c,d,e,f=0,g=0,h=0,i=0,j=0,k={},l=1,m=[],n=[],o=[];this.getCartCredits=function(){return f},this.setCartCredits=function(a){f=a},this.getCartCourseCount=function(){return g},this.setCartCourseCount=function(a){g=a},this.getRegisteredCredits=function(){return c},this.setRegisteredCredits=function(a){c=a},this.getRegisteredCourseCount=function(){return h},this.setRegisteredCourseCount=function(a){h=a},this.getWaitlistedCredits=function(){return i},this.setWaitlistedCredits=function(a){i=a},this.getWaitlistedCourseCount=function(){return j},this.setWaitlistedCourseCount=function(a){j=a},this.getCartCourses=function(){return m},this.setCartCourses=function(a){m.splice(0,m.length),a&&(angular.forEach(a,function(a){m.push(a)}),this.setCartCourseCount(a.length))},this.getRegisteredCourses=function(){return n},this.getWaitlistedCourses=function(){return o},this.getScheduledCourses=function(){return n.concat(o)},this.removeRegisteredCourse=function(a){this.getRegisteredCourses().splice(this.getRegisteredCourses().indexOf(a),1),this.setRegisteredCredits(parseFloat(this.getRegisteredCredits())-parseFloat(a.credits)),this.setRegisteredCourseCount(parseInt(this.getRegisteredCourseCount())-1)},this.removeWaitlistedCourse=function(a){this.getWaitlistedCourses().splice(this.getWaitlistedCourses().indexOf(a),1),this.setWaitlistedCredits(parseFloat(this.getWaitlistedCredits())-parseFloat(a.credits)),this.setWaitlistedCourseCount(this.getWaitlistedCourses().length)},this.getSchedule=function(){return d},this.setSchedule=function(a){d=a},this.getUserId=function(){return e},this.setUserId=function(a){e=a},this.getCorrespondingStatusFromState=function(c){var d=b.new;return a.processing.indexOf(c)>=0?d=b.processing:a.success.indexOf(c)>=0?d=b.success:a.error.indexOf(c)>=0?d=b.error:a.waitlist.indexOf(c)>=0?d=b.waitlist:a.action.indexOf(c)>=0&&(d=b.action),d},this.updateScheduleCounts=function(a){var b=a.studentScheduleTermResults,c=a.userId,d=0,e=0;n.splice(0,n.length),o.splice(0,o.length),this.setSchedule(b),angular.forEach(b,function(a){angular.forEach(a.registeredCourseOfferings,function(a){d+=parseFloat(a.credits),n.push(a);var b=0;angular.forEach(a.gradingOptions,function(){b++}),a.gradingOptionCount=b}),angular.forEach(a.waitlistCourseOfferings,function(a){e+=parseFloat(a.credits),o.push(a);var b=0;angular.forEach(a.gradingOptions,function(){b++}),a.gradingOptionCount=b})}),this.setRegisteredCourseCount(n.length),this.setRegisteredCredits(d),this.setWaitlistedCredits(e),this.setWaitlistedCourseCount(o.length),this.setUserId(c)},this.getCorrespondingMessageFromStatus=function(a){var c="";return a===b.waitlist&&(c="If a seat becomes available you will be registered automatically"),c},this.getCourseIndex=function(a){var b=a.courseCode+a.regGroup,c=k[b];return isNaN(c)&&(c=l++,k[b]=c),c}}]),angular.module("regCartApp").service("ServiceUtilities",["$resource","APP_URL",function(a,b){function c(a){var b=[];for(var c in a)a[c]&&b.push(encodeURIComponent(c)+"="+encodeURIComponent(a[c]));return b.join("&")}this.getData=function(c){return a(b+c,{},{query:{method:"GET",cache:!1,isArray:!1}})},this.deleteData=function(c){return a(b+c,{},{query:{method:"DELETE",cache:!1,isArray:!1}})},this.postData=function(d){return a(b+d,{},{query:{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},method:"POST",cache:!1,isArray:!1,transformRequest:function(a){return c(a)}}})},this.putData=function(d){return a(b+d,{},{query:{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},method:"PUT",cache:!1,isArray:!1,transformRequest:function(a){return c(a)}}})},this.getArray=function(c){return a(b+c,{},{query:{method:"GET",cache:!1,isArray:!0}})}}]),angular.module("regCartApp").service("CourseCalendarDataParser",["DAY_CONSTANTS","GlobalVarsService",function(a,b){function c(){var b={};return b[a.monday]=[],b[a.tuesday]=[],b[a.wednesday]=[],b[a.thursday]=[],b[a.friday]=[],b}function d(a,b,c){return angular.forEach(b,function(b){if(!b.dropped){var d={courseCode:b.courseCode,regGroup:b.regGroupCode};switch(c){case"CART":angular.forEach(b.schedule,function(b){angular.forEach(b.activityOfferingLocationTime,function(b){var f=b.time;a=e(a,d,f,c)})});break;default:angular.forEach(b.activityOfferings,function(b){angular.forEach(b.scheduleComponents,function(b){a=e(a,d,b,c)})})}}}),a}function e(b,c,d,e){return d.isTBA||angular.forEach(a.dayArray,function(a){d.days.indexOf(a)>-1&&(b=f(b,c,d,a,e))}),b}function f(b,c,d,e,f){angular.isArray(b[e])||(b[e]=[],e!==a.saturday||angular.isArray(b[a.sunday])||(b[a.sunday]=[]),e!==a.sunday||angular.isArray(b[a.saturday])||(b[a.saturday]=[]));var g=j(d.startTime),h=j(d.endTime);g>h&&(h+=1440);var i={index:k(c),courseCode:c.courseCode,startTime:g,endTime:h,type:f};return b[e].push(i),b}function g(b){var c=["REG","WAIT","CART"],d=[],e=null,f=null,g=60;return angular.forEach(a.dayArray,function(a){var i=b[a];if(angular.isArray(i)){var j=[],k={};angular.forEach(i,function(a){var b=a.type;angular.isArray(k[b])||(k[b]=[]),k[b].push(a),(null===e||a.startTime-g<e)&&(e=a.startTime-g),(null===f||a.endTime+g>f)&&(f=a.endTime+g)}),angular.forEach(c,function(a){var b=k[a];angular.forEach(b,function(a){j=h(j,a)})});var l={day:a,rows:j};d.push(l)}}),0>e&&(e=0),{timeRange:[e,f],days:d}}function h(a,b){for(var c=!1,d=function(a,b){return a.startTime===b.startTime?0:a.startTime<b.startTime?-1:1},e=0;e<a.length;e++){var f=a[e],g=f.courses;angular.isArray(g)||(g=[]);var h=i(g,b);if(!h){g.push(b),g.sort(d),c=!0;break}}if(!c){var j=[];j.push(b),a.push({courses:j})}return a}function i(a,b){for(var c=!1,d=b.startTime,e=b.endTime,f=0;f<a.length;f++){var g=a[f],h=g.startTime,i=g.endTime;if(i>=d&&e>=h){angular.isArray(b.conflicts)||(b.conflicts=[]),angular.isArray(g.conflicts)||(g.conflicts=[]),b.conflicts.push(g.index),g.conflicts.push(b.index),c=!0;break}}return c}function j(a){var b=a.indexOf(":"),c=a.substring(0,b),d=a.substring(b+1,a.indexOf(" ")),e=-1!==a.toLowerCase().indexOf("pm"),f=60*parseInt(c);return f+=parseInt(d),e&&"12"!==c&&(f+=720),f}function k(a){return b.getCourseIndex(a)}this.buildCalendar=function(a,b,e){var f=c();return a&&(f=d(f,a,"REG")),b&&(f=d(f,b,"WAIT")),e&&(f=d(f,e,"CART")),g(f)}}]),angular.module("regCartApp").directive("courseCalendar",function(){return{restrict:"E",templateUrl:"partials/courseCalendar.html",controller:["$scope","CourseCalendarDataParser","GlobalVarsService",function(a,b,c){a.courseFilter=function(b){var c=!0;switch(b.type){case"REG":c=!a.hideRegistered;break;case"WAIT":c=!a.hideWaitlisted;break;case"CART":c=!a.hideCart}return c},a.timeFilter=function(b){var c=b.getHours();return a.timeRange[0]/60<=c&&c<=a.timeRange[1]/60},a.hideRegistered=!1,a.hideWaitlisted=!1,a.hideCart=!1,a.timeRange=[],a.times=[];
for(var d=0;24>d;d++)a.times.push(new Date(0,0,0,d,0,0,0));a.registered=c.getRegisteredCourses(),a.waitlisted=c.getWaitlistedCourses(),a.cart=c.getCartCourses();var e=function(c){if(c){var d=b.buildCalendar(a.registered,a.waitlisted,a.cart);a.timeRange=d.timeRange,a.days=d.days}};e(!0),a.$watchCollection("registered",e),a.$watchCollection("waitlisted",e),a.$watchCollection("cart",e)}]}}),angular.module("regCartApp").directive("courseCalendarItem",["$timeout",function(a){return{restrict:"CAE",link:function(b,c){a(function(){var a=b.timeRange,d=c.parent(),e=a[1]-a[0],f=b.course.endTime-b.course.startTime,g=100*f/e,h=100*(b.course.startTime-a[0])/e;c.css({left:h+"%",width:g+"%"});var i=c[0].offsetHeight;d.height()<i&&d.height(i)})}}}]),angular.module("regCartApp").directive("courseCard",function(){return{transclude:!0,scope:{schedules:"=",credits:"=",type:"@"},templateUrl:"partials/courseCard.html",controller:"CardCtrl"}}).directive("courseAccordion",function(){return{restrict:"E",transclude:!0,scope:{course:"=",type:"@",cardIndex:"=",cartId:"="},templateUrl:"partials/courseAccordion.html",controller:"CardCtrl"}}).controller("CardCtrl",["$scope","$timeout","GlobalVarsService","TermsService","CartService","ScheduleService","STATUS","GRADING_OPTION",function(a,b,c,d,e,f,g,h){function i(){var b;switch(a.type){case"waitlist":b={heading:"Waitlisted",prefix:"waitlisted",prefix2:"waitlist_",prefix3:"waitlist_",remove:"Remove"};break;case"cart":b={heading:"Cart",prefix:"cart",prefix2:"",prefix3:"cart_",remove:"Remove"};break;default:b={heading:"Registered",prefix:"reg",prefix2:"",prefix3:"schedule_",remove:"Drop"}}return b}function j(a){console.log("Updating registered course:"),console.log(a.newCredits),console.log(a.newGrading),console.log(d.getTermId()),f.updateScheduleItem().query({courseCode:a.courseCode,regGroupId:a.regGroupId,regGroupCode:a.regGroupCode,masterLprId:a.masterLprId,termId:d.getTermId(),credits:a.newCredits,gradingOptionId:a.newGrading},function(b){c.setRegisteredCredits(parseFloat(c.getRegisteredCredits())-parseFloat(a.credits)+parseFloat(b.credits)),m(a,b)},function(b){a.statusMessage={txt:b.data,type:g.error}})}function k(a){console.log("Updating waitlisted course:"),console.log(a.newCredits),console.log(a.newGrading),f.updateWaitlistItem().query({courseCode:a.courseCode,regGroupId:a.regGroupId,regGroupCode:a.regGroupCode,masterLprId:a.masterLprId,termId:d.getTermId(),credits:a.newCredits,gradingOptionId:a.newGrading},function(b){c.setWaitlistedCredits(parseFloat(c.getWaitlistedCredits())-parseFloat(a.credits)+parseFloat(b.credits)),m(a,b)},function(b){a.statusMessage={txt:b.data,type:g.error}})}function l(b){console.log("Updating cart item. Grading: "+b.newGrading+", credits: "+b.newCredits),e.updateCartItem().query({cartId:a.cartId,cartItemId:b.cartItemId,credits:b.newCredits,gradingOptionId:b.newGrading},function(a){console.log("old: "+b.credits+" To: "+a.credits),console.log("old: "+b.gradingOptionId+" To: "+a.gradingOptionId),m(b,a)})}function m(c,d){console.log(d);var e=c.credits,f=c.gradingOptionId;switch(c.credits=d.credits,a.type){case"cart":c.gradingOptionId=d.grading,c.grading=c.gradingOptionId;break;default:c.gradingOptionId=d.gradingOptionId}c.editing=!1,c.isopen=!c.isopen,c.newGrading!==f&&(c.editGradingOption=!0,b(function(){c.editGradingOption=!1},2e3)),c.newCredits!==e&&(c.editCredits=!0,b(function(){c.editCredits=!1},2e3))}a.config=i(),"cart"===a.type&&(a.course.gradingOptionId=a.course.grading),a.courseOfferings=function(b){var c;switch(a.type){case"waitlist":c=b.waitlistCourseOfferings;break;default:c=b.registeredCourseOfferings}return c},a.dropCourse=function(b,c){switch(console.log("course-card index: "+b),a.type){case"cart":a.$emit("deleteCartItem",b);break;default:console.log("Open drop confirmation"),c.dropping=!0,a.index=b,a.course=c}},a.cancelDropConfirmation=function(a){a.dropping=!1},a.removeStatusMessage=function(b){b.statusMessage=null,a.$emit("removeRegisteredStatusMessage",b)},a.showBadge=function(a){return a.gradingOptionId!==h.letter||a.editGradingOption},a.editItem=function(a){a.newCredits=a.credits,a.newGrading=a.gradingOptionId,a.editing=!0},a.updateItem=function(b){switch(a.type){case"registered":j(b);break;case"waitlist":k(b);break;case"cart":l(b)}},a.removeWaitlistStatusMessage=function(b){a.$emit("removeWaitlistStatusMessage",b)},a.dropRegistrationGroup=function(b,c){a.$emit("dropRegistered",b,c)},a.dropFromWaitlist=function(b,c){a.$emit("dropWaitlist",b,c)},a.gradingOption=function(b){return b.gradingOptions[a.course.gradingOptionId]},a.courseTitle=function(b){var c;switch(a.type){case"cart":c=b.courseTitle;break;default:c=b.longName}return c}}]),angular.module("regCartApp").directive("courseOptions",function(){return{restrict:"E",transclude:!0,scope:{course:"=",maxOptions:"@max",prefix:"@",showAll:"@",moreButtonSelectBehavior:"@moreBehavior",cancelFn:"&onCancel",submitFn:"&onSubmit"},templateUrl:"partials/courseOptions.html",controller:["$scope","$modal",function(a,b){function c(a,b,c){if(a.length<=g)return!0;var d=a.indexOf(b),e=a.indexOf(c),f=2,h=Math.max(0,Math.min(d-f,a.length-g)),i=Math.min(h+g,a.length)-1;return e>=h&&i>=e}function d(){var c=a.$new();c.course=angular.copy(f),c.cancel=function(){},c.submit=function(){},f.editing=!1;var d=b.open({backdrop:"static",template:'<div class="kscr-AdditionalOptions"><course-options course="course" show-all="true" max="'+g+'" prefix="modal_'+(a.prefix?a.prefix:"")+'" on-submit="modalSubmit()" on-cancel="modalCancel()"></course-options></div>',scope:c,controller:["$scope",function(a){a.showAllCreditOptions=!0,a.showAllGradingOptions=!0,a.modalCancel=function(){a.$dismiss("cancel")},a.modalSubmit=function(){a.$close(a.course)}}]});d.result.then(function(b){f.newGrading=b.newGrading,f.newCredits=b.newCredits,a.submit()},function(){a.cancel()})}function e(){a.showAllCreditOptions=h,a.showAllGradingOptions=h}var f=a.course,g=a.maxOptions||4,h=a.showAll?!0:!1,i=a.moreButtonSelectBehavior||"expand";a.showAllCreditOptions=h,a.showAllGradingOptions=h,a.gradingOptions=[],f&&f.gradingOptions&&angular.forEach(f.gradingOptions,function(a,b){this.push({key:b,label:a})},a.gradingOptions),a.creditOptionsFilter=function(b){return!f||a.showAllCreditOptions?!0:c(f.creditOptions,f.credits,b)},a.gradingOptionsFilter=function(b){return!f||a.showAllGradingOptions?!0:c(Object.keys(f.gradingOptions),f.grading,b.key)},a.showMoreCreditOptions=function(){"expand"===i?a.showAllCreditOptions=!0:d()},a.showMoreGradingOptions=function(){"expand"===i?a.showAllGradingOptions=!0:d()},a.shouldShowMoreCreditOptionsToggle=function(){return!a.showAllCreditOptions&&f.creditOptions.length>g},a.shouldShowMoreGradingOptionsToggle=function(){return!a.showAllGradingOptions&&Object.keys(f.gradingOptions).length>g},a.cancel=function(){console.log("Canceling options changes"),f.newCredits=f.credits,f.newGrading=f.grading||f.gradingOptionId,f.status="",f.editing=!1,a.cancelFn&&a.cancelFn({course:f}),e()},a.submit=function(){console.log("Submitting options form"),a.submitFn&&a.submitFn({course:f}),e()},a.showGradingHelp=function(){b.open({templateUrl:"partials/gradingOptionsHelp.html"})}}]}}),angular.module("regCartApp").directive("focusMe",["$timeout","$parse",function(a,b){return{link:function(c,d,e){var f=b(e.focusMe);c.$watch(f,function(b){b===!0&&a(function(){d[0].focus()})}),d.bind("blur",function(){a(function(){d[0].focus()})})}}}]).directive("focusOnce",["$timeout","$parse",function(a,b){return{link:function(c,d,e){var f=b(e.focusOnce);c.$watch(f,function(b){b===!0&&a(function(){d[0].focus()})})}}}]).directive("dropMenu",["$window",function(a){return{controller:["$scope",function(b){return angular.element(a).bind("resize",function(){b.dropMenu===!0&&(b.dropMenu=!1)})}],templateUrl:"dropMenu.html"}}]),angular.module("regCartApp").directive("searchFacet",[function(){return{restrict:"ECA",scope:{facet:"=",results:"="},templateUrl:"partials/searchFacet.html",controller:["$scope",function(a){function b(b){angular.isFunction(a.facet.prepare)&&a.facet.prepare(b),a.options=a.facet.optionsProvider(b),a.facet.selectedOptions=[]}angular.isFunction(a.facet.optionsProvider)||(a.facet.optionsProvider=function(b){var c=[];return angular.isDefined(a.facet.optionsKey)&&null!==a.facet.optionsKey?angular.forEach(b,function(b){if(angular.isDefined(b[a.facet.optionsKey])){var d=b[a.facet.optionsKey];angular.isArray(d)||(d=[d]),angular.forEach(d,function(a){var b=null;angular.forEach(c,function(c){null===b&&c.value===a&&(b=c)}),null===b&&(b={label:a,value:a,count:0},c.push(b)),b.count++})}}):console.log('Facet "'+a.facet.id+'" is missing the required optionsKey value'),c.sort(function(a,b){return a.label===b.label?0:a.label<b.label?-1:1}),c}),angular.isFunction(a.facet.filter)||(a.facet.filter=function(b,c){if(angular.isDefined(a.facet.optionsKey)&&null!==a.facet.optionsKey&&angular.isDefined(b[a.facet.optionsKey])){var d=b[a.facet.optionsKey];if(angular.isArray(d)){var e=!1;return angular.forEach(d,function(a){e||-1===c.indexOf(a)||(e=!0)}),e}return-1!==c.indexOf(d)}return!1}),a.options=[],a.facet.selectedOptions=[],a.$watch("results",function(a){b(a)}),a.clearSelectedOptions=function(){a.facet.selectedOptions=[]},a.hasSelected=function(){return a.facet.selectedOptions.length>0},a.isSelected=function(b){return-1!==a.facet.selectedOptions.indexOf(b.value)},a.toggleOption=function(b){var c=a.facet.selectedOptions.indexOf(b.value);-1===c?a.facet.selectedOptions.push(b.value):a.facet.selectedOptions.splice(c,1)}}]}}]),angular.module("regCartApp").directive("searchForm",[function(){return{restrict:"ECA",templateUrl:"partials/searchForm.html",controller:["$scope","$state",function(a,b){function c(){var a=null;return angular.isDefined(b.params)&&angular.isDefined(b.params.searchCriteria)&&(a=b.params.searchCriteria),a}function d(){var d=c();null!==d?d!==a.courseSearchCriteria&&(a.courseSearchCriteria=b.params.searchCriteria):a.courseSearchCriteria=""}a.courseSearchCriteria="",d(),a.$on("$stateChangeSuccess",function(){d()}),a.submit=function(){c()!==a.courseSearchCriteria&&b.go("root.search.results",{searchCriteria:a.courseSearchCriteria})}}]}}]),angular.module("regCartApp").directive("searchColumn",["$filter",function(a){return{restrict:"E",require:"^searchResults",link:function(b,c,d){if(d.name||d.field||d.filter){var e={name:d.name,field:d.field,filter:d.filter,order:d.order,url:d.url};b.searchColumns.push(e),b.searchColumns=a("orderBy")(b.searchColumns,"order")}d.field&&"true"===d.defaultField&&(b.defaultField=d.field)}}}]).directive("searchList",function(){return{restrict:"E",require:"^searchResults",templateUrl:"partials/searchList.html",link:function(a,b,c){c.detailsId&&(a.detailsId=c.detailsId)}}}).directive("searchResults",function(){return{restrict:"E",controller:"SearchResultsCtrl"}}).controller("SearchResultsCtrl",["$scope","$filter",function(a,b){function c(b){angular.isUndefined(a.reverseMap[b])&&(a.reverseMap[b]=!0)}a.displayLimits=[20,50,100],a.displayLimit=a.displayLimits[0],a.page=1,a.lastPage=1,a.detailsId={},a.reverseMap={},a.pageRange=function(){for(var b=[],c=1;c<=a.lastPage;c++)b.push(c);return b},a.$watch("displayLimit",function(){a.page=1}),a.displayRange=function(b){var c=(a.page-1)*a.displayLimit+1,d=c+a.displayLimit-1;return d>b&&(d=b),a.lastPage=Math.ceil(b/a.displayLimit),a.page>a.lastPage&&(a.page=1),c===d?d+" of "+b:c+"-"+d+" of "+b},a.applyFilter=function(a,c){return angular.isArray(a)&&c?b(c)(a):a},a.getId=function(b){return b[a.detailsId]},a.getReverse=function(b){return c(b),a.reverseMap[b]},a.switchReverse=function(b){return c(b),a.reverseMap[b]=!a.reverseMap[b],a.reverseMap[b]}}]),angular.module("regCartApp").directive("sticky",["$timeout","$window","$document",function(a,b,c){return{restrict:"CA",scope:{},link:function(d,e){a(function(){function d(){var a=(b.pageYOffset||j.scrollTop())-(j.clientTop||0),c=a>=k;!l&&c?f():l&&!c&&g()}function f(){h||(h=angular.element('<div class="util-sticky-placeholder"/>')),h.css("height",e.outerHeight()+"px"),h.insertBefore(e),e.addClass("util-sticky--stuck"),l=!0}function g(){h&&(h.remove(),h=null),e.removeClass("util-sticky--stuck"),l=!1}var h,i=angular.element(b),j=angular.element(c),k=e.offset().top,l=!1;e.addClass("util-sticky"),i.on("scroll",d),i.on("resize",function(){a(d)}),d(),e.bind("$destroy",function(){h&&(h.remove(),h=null)})})}}}]);